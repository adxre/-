#–†–∞–±–æ—á–∞—è –¢–µ—Ç—Ä–∞–¥—å 1 –ó–∞–¥–∞–Ω–∏–µ 4.3.2
#–ó–∞–¥–∞–Ω–∏–µ: –î–∞–Ω–∞ –Ω–µ–∫–∞—è  —Ñ—É–Ω–∫—Ü–∏—è. –°–æ–∑–¥–∞—Ç—å –º–∞—Å—Å–∏–≤ –∏–∑ 10 –∑–Ω–∞—á–µ–Ω–∏–π —Ñ—É–Ω–∫—Ü–∏–∏ (ùë•, –Ω–∞–ø—Ä–∏–º–µ—Ä, –∏–∑–º–µ–Ω—è–µ—Ç—Å—è –æ—Ç 1 –¥–æ 10). –í—ã–¥–µ–ª–∏—Ç—å —Å—Ä–µ–∑ –ø–µ—Ä–≤–æ–π
#–ø–æ–ª–æ–≤–∏–Ω—ã –º–∞—Å—Å–∏–≤–∞ –∏ –ø–æ—Å—Ç—Ä–æ–∏—Ç—å –≥—Ä–∞—Ñ–∏–∫–∏ –¥–ª—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –º–∞—Å—Å–∏–≤–∞ ‚Äì –ª–∏–Ω–µ–π–Ω—ã–π –∏ –¥–ª—è —Å—Ä–µ–∑–∞ ‚Äì —Ç–æ—á–µ—á–Ω—ã–π
import numpy as np
import math
import matplotlib.pyplot as plt

# –°–æ–∑–¥–∞–µ–º –º–∞—Å—Å–∏–≤ –∑–Ω–∞—á–µ–Ω–∏–π x –æ—Ç 1 –¥–æ 10
x = np.linspace(1, 10, 10)

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä—É—é –Ω—É–∂–Ω–æ –≤—ã—á–∏—Å–ª–∏—Ç—å
def my_function(x):
    return (math.sqrt(1+ math.e**math.sqrt(x)+np.cos(x**2))/abs(1-(np.sin(x))**2)) + np.log(abs(2*x))

# –í—ã—á–∏—Å–ª—è–µ–º –∑–Ω–∞—á–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –≤—Å–µ–≥–æ –º–∞—Å—Å–∏–≤–∞ x
y1 = np.vectorize(my_function)
y = y1(x)

# –í—ã–¥–µ–ª—è–µ–º —Å—Ä–µ–∑ –ø–µ—Ä–≤–æ–π –ø–æ–ª–æ–≤–∏–Ω—ã –º–∞—Å—Å–∏–≤–∞
half_index = len(x) // 2
x_slice = x[:half_index]
y_slice = y[:half_index]

# –°—Ç—Ä–æ–∏–º –≥—Ä–∞—Ñ–∏–∫ –¥–ª—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –º–∞—Å—Å–∏–≤–∞ (–ª–∏–Ω–µ–π–Ω—ã–π)
plt.figure(figsize=(12, 6))
plt.subplot(1, 2, 1)
plt.plot(x, y, 'b.-')
plt.xlabel('x')
plt.ylabel('y')
plt.title('–ì—Ä–∞—Ñ–∏–∫ –¥–ª—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –º–∞—Å—Å–∏–≤–∞')

# –°—Ç—Ä–æ–∏–º –≥—Ä–∞—Ñ–∏–∫ –¥–ª—è —Å—Ä–µ–∑–∞ (—Ç–æ—á–µ—á–Ω—ã–π)
plt.subplot(1, 2, 2)
plt.scatter(x_slice, y_slice, c='r', marker='o')
plt.xlabel('x')
plt.ylabel('y')
plt.title('–ì—Ä–∞—Ñ–∏–∫ –¥–ª—è —Å—Ä–µ–∑–∞')

plt.tight_layout()
plt.show()
